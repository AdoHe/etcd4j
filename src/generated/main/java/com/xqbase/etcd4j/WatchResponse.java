// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etcd.proto

package com.xqbase.etcd4j;

/**
 * Protobuf type {@code etcd4j.WatchResponse}
 */
public  final class WatchResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:etcd4j.WatchResponse)
    WatchResponseOrBuilder {
  // Use WatchResponse.newBuilder() to construct.
  private WatchResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private WatchResponse() {
    watchId_ = 0L;
    created_ = false;
    canceled_ = false;
    compactRevision_ = 0L;
    events_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private WatchResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.xqbase.etcd4j.ResponseHeader.Builder subBuilder = null;
            if (header_ != null) {
              subBuilder = header_.toBuilder();
            }
            header_ = input.readMessage(com.xqbase.etcd4j.ResponseHeader.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(header_);
              header_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            watchId_ = input.readInt64();
            break;
          }
          case 24: {

            created_ = input.readBool();
            break;
          }
          case 32: {

            canceled_ = input.readBool();
            break;
          }
          case 40: {

            compactRevision_ = input.readInt64();
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              events_ = new java.util.ArrayList<com.xqbase.etcd4j.Event>();
              mutable_bitField0_ |= 0x00000020;
            }
            events_.add(input.readMessage(com.xqbase.etcd4j.Event.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        events_ = java.util.Collections.unmodifiableList(events_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_WatchResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_WatchResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xqbase.etcd4j.WatchResponse.class, com.xqbase.etcd4j.WatchResponse.Builder.class);
  }

  private int bitField0_;
  public static final int HEADER_FIELD_NUMBER = 1;
  private com.xqbase.etcd4j.ResponseHeader header_;
  /**
   * <code>optional .etcd4j.ResponseHeader header = 1;</code>
   */
  public boolean hasHeader() {
    return header_ != null;
  }
  /**
   * <code>optional .etcd4j.ResponseHeader header = 1;</code>
   */
  public com.xqbase.etcd4j.ResponseHeader getHeader() {
    return header_ == null ? com.xqbase.etcd4j.ResponseHeader.getDefaultInstance() : header_;
  }
  /**
   * <code>optional .etcd4j.ResponseHeader header = 1;</code>
   */
  public com.xqbase.etcd4j.ResponseHeaderOrBuilder getHeaderOrBuilder() {
    return getHeader();
  }

  public static final int WATCH_ID_FIELD_NUMBER = 2;
  private long watchId_;
  /**
   * <code>optional int64 watch_id = 2;</code>
   *
   * <pre>
   * watch_id is the ID of the watching the response sent to.
   * </pre>
   */
  public long getWatchId() {
    return watchId_;
  }

  public static final int CREATED_FIELD_NUMBER = 3;
  private boolean created_;
  /**
   * <code>optional bool created = 3;</code>
   *
   * <pre>
   * If the response is for a create watch request, created is set to true.
   * Client should record the watch_id and prepare for receiving events for
   * that watching from the same stream.
   * All events sent to the created watching will attach with the same watch_id.
   * </pre>
   */
  public boolean getCreated() {
    return created_;
  }

  public static final int CANCELED_FIELD_NUMBER = 4;
  private boolean canceled_;
  /**
   * <code>optional bool canceled = 4;</code>
   *
   * <pre>
   * If the response is for a cancel watch request, cancel is set to true.
   * No further events will be sent to the canceled watching.
   * </pre>
   */
  public boolean getCanceled() {
    return canceled_;
  }

  public static final int COMPACT_REVISION_FIELD_NUMBER = 5;
  private long compactRevision_;
  /**
   * <code>optional int64 compact_revision = 5;</code>
   *
   * <pre>
   * CompactRevision is set to the minimum index if a watching tries to watch
   * at a compacted index.
   * This happens when creating a watching at a compacted revision or the watching cannot
   * catch up with the progress of the KV.
   * Client should treat the watching as canceled and should not try to create any
   * watching with same start_revision again.
   * </pre>
   */
  public long getCompactRevision() {
    return compactRevision_;
  }

  public static final int EVENTS_FIELD_NUMBER = 11;
  private java.util.List<com.xqbase.etcd4j.Event> events_;
  /**
   * <code>repeated .etcd4j.Event events = 11;</code>
   */
  public java.util.List<com.xqbase.etcd4j.Event> getEventsList() {
    return events_;
  }
  /**
   * <code>repeated .etcd4j.Event events = 11;</code>
   */
  public java.util.List<? extends com.xqbase.etcd4j.EventOrBuilder> 
      getEventsOrBuilderList() {
    return events_;
  }
  /**
   * <code>repeated .etcd4j.Event events = 11;</code>
   */
  public int getEventsCount() {
    return events_.size();
  }
  /**
   * <code>repeated .etcd4j.Event events = 11;</code>
   */
  public com.xqbase.etcd4j.Event getEvents(int index) {
    return events_.get(index);
  }
  /**
   * <code>repeated .etcd4j.Event events = 11;</code>
   */
  public com.xqbase.etcd4j.EventOrBuilder getEventsOrBuilder(
      int index) {
    return events_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (header_ != null) {
      output.writeMessage(1, getHeader());
    }
    if (watchId_ != 0L) {
      output.writeInt64(2, watchId_);
    }
    if (created_ != false) {
      output.writeBool(3, created_);
    }
    if (canceled_ != false) {
      output.writeBool(4, canceled_);
    }
    if (compactRevision_ != 0L) {
      output.writeInt64(5, compactRevision_);
    }
    for (int i = 0; i < events_.size(); i++) {
      output.writeMessage(11, events_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (header_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHeader());
    }
    if (watchId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, watchId_);
    }
    if (created_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, created_);
    }
    if (canceled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, canceled_);
    }
    if (compactRevision_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, compactRevision_);
    }
    for (int i = 0; i < events_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, events_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.xqbase.etcd4j.WatchResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.xqbase.etcd4j.WatchResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.xqbase.etcd4j.WatchResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xqbase.etcd4j.WatchResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code etcd4j.WatchResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:etcd4j.WatchResponse)
      com.xqbase.etcd4j.WatchResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_WatchResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_WatchResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xqbase.etcd4j.WatchResponse.class, com.xqbase.etcd4j.WatchResponse.Builder.class);
    }

    // Construct using com.xqbase.etcd4j.WatchResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getEventsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (headerBuilder_ == null) {
        header_ = null;
      } else {
        header_ = null;
        headerBuilder_ = null;
      }
      watchId_ = 0L;

      created_ = false;

      canceled_ = false;

      compactRevision_ = 0L;

      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        eventsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_WatchResponse_descriptor;
    }

    public com.xqbase.etcd4j.WatchResponse getDefaultInstanceForType() {
      return com.xqbase.etcd4j.WatchResponse.getDefaultInstance();
    }

    public com.xqbase.etcd4j.WatchResponse build() {
      com.xqbase.etcd4j.WatchResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.xqbase.etcd4j.WatchResponse buildPartial() {
      com.xqbase.etcd4j.WatchResponse result = new com.xqbase.etcd4j.WatchResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (headerBuilder_ == null) {
        result.header_ = header_;
      } else {
        result.header_ = headerBuilder_.build();
      }
      result.watchId_ = watchId_;
      result.created_ = created_;
      result.canceled_ = canceled_;
      result.compactRevision_ = compactRevision_;
      if (eventsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          events_ = java.util.Collections.unmodifiableList(events_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.events_ = events_;
      } else {
        result.events_ = eventsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xqbase.etcd4j.WatchResponse) {
        return mergeFrom((com.xqbase.etcd4j.WatchResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xqbase.etcd4j.WatchResponse other) {
      if (other == com.xqbase.etcd4j.WatchResponse.getDefaultInstance()) return this;
      if (other.hasHeader()) {
        mergeHeader(other.getHeader());
      }
      if (other.getWatchId() != 0L) {
        setWatchId(other.getWatchId());
      }
      if (other.getCreated() != false) {
        setCreated(other.getCreated());
      }
      if (other.getCanceled() != false) {
        setCanceled(other.getCanceled());
      }
      if (other.getCompactRevision() != 0L) {
        setCompactRevision(other.getCompactRevision());
      }
      if (eventsBuilder_ == null) {
        if (!other.events_.isEmpty()) {
          if (events_.isEmpty()) {
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEventsIsMutable();
            events_.addAll(other.events_);
          }
          onChanged();
        }
      } else {
        if (!other.events_.isEmpty()) {
          if (eventsBuilder_.isEmpty()) {
            eventsBuilder_.dispose();
            eventsBuilder_ = null;
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000020);
            eventsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getEventsFieldBuilder() : null;
          } else {
            eventsBuilder_.addAllMessages(other.events_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xqbase.etcd4j.WatchResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xqbase.etcd4j.WatchResponse) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.xqbase.etcd4j.ResponseHeader header_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.xqbase.etcd4j.ResponseHeader, com.xqbase.etcd4j.ResponseHeader.Builder, com.xqbase.etcd4j.ResponseHeaderOrBuilder> headerBuilder_;
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public boolean hasHeader() {
      return headerBuilder_ != null || header_ != null;
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public com.xqbase.etcd4j.ResponseHeader getHeader() {
      if (headerBuilder_ == null) {
        return header_ == null ? com.xqbase.etcd4j.ResponseHeader.getDefaultInstance() : header_;
      } else {
        return headerBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public Builder setHeader(com.xqbase.etcd4j.ResponseHeader value) {
      if (headerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        header_ = value;
        onChanged();
      } else {
        headerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public Builder setHeader(
        com.xqbase.etcd4j.ResponseHeader.Builder builderForValue) {
      if (headerBuilder_ == null) {
        header_ = builderForValue.build();
        onChanged();
      } else {
        headerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public Builder mergeHeader(com.xqbase.etcd4j.ResponseHeader value) {
      if (headerBuilder_ == null) {
        if (header_ != null) {
          header_ =
            com.xqbase.etcd4j.ResponseHeader.newBuilder(header_).mergeFrom(value).buildPartial();
        } else {
          header_ = value;
        }
        onChanged();
      } else {
        headerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public Builder clearHeader() {
      if (headerBuilder_ == null) {
        header_ = null;
        onChanged();
      } else {
        header_ = null;
        headerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public com.xqbase.etcd4j.ResponseHeader.Builder getHeaderBuilder() {
      
      onChanged();
      return getHeaderFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    public com.xqbase.etcd4j.ResponseHeaderOrBuilder getHeaderOrBuilder() {
      if (headerBuilder_ != null) {
        return headerBuilder_.getMessageOrBuilder();
      } else {
        return header_ == null ?
            com.xqbase.etcd4j.ResponseHeader.getDefaultInstance() : header_;
      }
    }
    /**
     * <code>optional .etcd4j.ResponseHeader header = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.xqbase.etcd4j.ResponseHeader, com.xqbase.etcd4j.ResponseHeader.Builder, com.xqbase.etcd4j.ResponseHeaderOrBuilder> 
        getHeaderFieldBuilder() {
      if (headerBuilder_ == null) {
        headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.xqbase.etcd4j.ResponseHeader, com.xqbase.etcd4j.ResponseHeader.Builder, com.xqbase.etcd4j.ResponseHeaderOrBuilder>(
                getHeader(),
                getParentForChildren(),
                isClean());
        header_ = null;
      }
      return headerBuilder_;
    }

    private long watchId_ ;
    /**
     * <code>optional int64 watch_id = 2;</code>
     *
     * <pre>
     * watch_id is the ID of the watching the response sent to.
     * </pre>
     */
    public long getWatchId() {
      return watchId_;
    }
    /**
     * <code>optional int64 watch_id = 2;</code>
     *
     * <pre>
     * watch_id is the ID of the watching the response sent to.
     * </pre>
     */
    public Builder setWatchId(long value) {
      
      watchId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 watch_id = 2;</code>
     *
     * <pre>
     * watch_id is the ID of the watching the response sent to.
     * </pre>
     */
    public Builder clearWatchId() {
      
      watchId_ = 0L;
      onChanged();
      return this;
    }

    private boolean created_ ;
    /**
     * <code>optional bool created = 3;</code>
     *
     * <pre>
     * If the response is for a create watch request, created is set to true.
     * Client should record the watch_id and prepare for receiving events for
     * that watching from the same stream.
     * All events sent to the created watching will attach with the same watch_id.
     * </pre>
     */
    public boolean getCreated() {
      return created_;
    }
    /**
     * <code>optional bool created = 3;</code>
     *
     * <pre>
     * If the response is for a create watch request, created is set to true.
     * Client should record the watch_id and prepare for receiving events for
     * that watching from the same stream.
     * All events sent to the created watching will attach with the same watch_id.
     * </pre>
     */
    public Builder setCreated(boolean value) {
      
      created_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool created = 3;</code>
     *
     * <pre>
     * If the response is for a create watch request, created is set to true.
     * Client should record the watch_id and prepare for receiving events for
     * that watching from the same stream.
     * All events sent to the created watching will attach with the same watch_id.
     * </pre>
     */
    public Builder clearCreated() {
      
      created_ = false;
      onChanged();
      return this;
    }

    private boolean canceled_ ;
    /**
     * <code>optional bool canceled = 4;</code>
     *
     * <pre>
     * If the response is for a cancel watch request, cancel is set to true.
     * No further events will be sent to the canceled watching.
     * </pre>
     */
    public boolean getCanceled() {
      return canceled_;
    }
    /**
     * <code>optional bool canceled = 4;</code>
     *
     * <pre>
     * If the response is for a cancel watch request, cancel is set to true.
     * No further events will be sent to the canceled watching.
     * </pre>
     */
    public Builder setCanceled(boolean value) {
      
      canceled_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool canceled = 4;</code>
     *
     * <pre>
     * If the response is for a cancel watch request, cancel is set to true.
     * No further events will be sent to the canceled watching.
     * </pre>
     */
    public Builder clearCanceled() {
      
      canceled_ = false;
      onChanged();
      return this;
    }

    private long compactRevision_ ;
    /**
     * <code>optional int64 compact_revision = 5;</code>
     *
     * <pre>
     * CompactRevision is set to the minimum index if a watching tries to watch
     * at a compacted index.
     * This happens when creating a watching at a compacted revision or the watching cannot
     * catch up with the progress of the KV.
     * Client should treat the watching as canceled and should not try to create any
     * watching with same start_revision again.
     * </pre>
     */
    public long getCompactRevision() {
      return compactRevision_;
    }
    /**
     * <code>optional int64 compact_revision = 5;</code>
     *
     * <pre>
     * CompactRevision is set to the minimum index if a watching tries to watch
     * at a compacted index.
     * This happens when creating a watching at a compacted revision or the watching cannot
     * catch up with the progress of the KV.
     * Client should treat the watching as canceled and should not try to create any
     * watching with same start_revision again.
     * </pre>
     */
    public Builder setCompactRevision(long value) {
      
      compactRevision_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 compact_revision = 5;</code>
     *
     * <pre>
     * CompactRevision is set to the minimum index if a watching tries to watch
     * at a compacted index.
     * This happens when creating a watching at a compacted revision or the watching cannot
     * catch up with the progress of the KV.
     * Client should treat the watching as canceled and should not try to create any
     * watching with same start_revision again.
     * </pre>
     */
    public Builder clearCompactRevision() {
      
      compactRevision_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.xqbase.etcd4j.Event> events_ =
      java.util.Collections.emptyList();
    private void ensureEventsIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        events_ = new java.util.ArrayList<com.xqbase.etcd4j.Event>(events_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.xqbase.etcd4j.Event, com.xqbase.etcd4j.Event.Builder, com.xqbase.etcd4j.EventOrBuilder> eventsBuilder_;

    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public java.util.List<com.xqbase.etcd4j.Event> getEventsList() {
      if (eventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(events_);
      } else {
        return eventsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public int getEventsCount() {
      if (eventsBuilder_ == null) {
        return events_.size();
      } else {
        return eventsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public com.xqbase.etcd4j.Event getEvents(int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);
      } else {
        return eventsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder setEvents(
        int index, com.xqbase.etcd4j.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.set(index, value);
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder setEvents(
        int index, com.xqbase.etcd4j.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.set(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder addEvents(com.xqbase.etcd4j.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder addEvents(
        int index, com.xqbase.etcd4j.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(index, value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder addEvents(
        com.xqbase.etcd4j.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder addEvents(
        int index, com.xqbase.etcd4j.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder addAllEvents(
        java.lang.Iterable<? extends com.xqbase.etcd4j.Event> values) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, events_);
        onChanged();
      } else {
        eventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder clearEvents() {
      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        eventsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public Builder removeEvents(int index) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.remove(index);
        onChanged();
      } else {
        eventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public com.xqbase.etcd4j.Event.Builder getEventsBuilder(
        int index) {
      return getEventsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public com.xqbase.etcd4j.EventOrBuilder getEventsOrBuilder(
        int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);  } else {
        return eventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public java.util.List<? extends com.xqbase.etcd4j.EventOrBuilder> 
         getEventsOrBuilderList() {
      if (eventsBuilder_ != null) {
        return eventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(events_);
      }
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public com.xqbase.etcd4j.Event.Builder addEventsBuilder() {
      return getEventsFieldBuilder().addBuilder(
          com.xqbase.etcd4j.Event.getDefaultInstance());
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public com.xqbase.etcd4j.Event.Builder addEventsBuilder(
        int index) {
      return getEventsFieldBuilder().addBuilder(
          index, com.xqbase.etcd4j.Event.getDefaultInstance());
    }
    /**
     * <code>repeated .etcd4j.Event events = 11;</code>
     */
    public java.util.List<com.xqbase.etcd4j.Event.Builder> 
         getEventsBuilderList() {
      return getEventsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.xqbase.etcd4j.Event, com.xqbase.etcd4j.Event.Builder, com.xqbase.etcd4j.EventOrBuilder> 
        getEventsFieldBuilder() {
      if (eventsBuilder_ == null) {
        eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.xqbase.etcd4j.Event, com.xqbase.etcd4j.Event.Builder, com.xqbase.etcd4j.EventOrBuilder>(
                events_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        events_ = null;
      }
      return eventsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:etcd4j.WatchResponse)
  }

  // @@protoc_insertion_point(class_scope:etcd4j.WatchResponse)
  private static final com.xqbase.etcd4j.WatchResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xqbase.etcd4j.WatchResponse();
  }

  public static com.xqbase.etcd4j.WatchResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WatchResponse>
      PARSER = new com.google.protobuf.AbstractParser<WatchResponse>() {
    public WatchResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new WatchResponse(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<WatchResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WatchResponse> getParserForType() {
    return PARSER;
  }

  public com.xqbase.etcd4j.WatchResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

