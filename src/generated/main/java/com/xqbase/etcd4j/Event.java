// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etcd.proto

package com.xqbase.etcd4j;

/**
 * Protobuf type {@code etcd4j.Event}
 */
public  final class Event extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:etcd4j.Event)
    EventOrBuilder {
  // Use Event.newBuilder() to construct.
  private Event(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Event() {
    type_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Event(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {
            com.xqbase.etcd4j.KeyValue.Builder subBuilder = null;
            if (kv_ != null) {
              subBuilder = kv_.toBuilder();
            }
            kv_ = input.readMessage(com.xqbase.etcd4j.KeyValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(kv_);
              kv_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_Event_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_Event_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xqbase.etcd4j.Event.class, com.xqbase.etcd4j.Event.Builder.class);
  }

  /**
   * Protobuf enum {@code etcd4j.Event.EventType}
   */
  public enum EventType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PUT = 0;</code>
     */
    PUT(0, 0),
    /**
     * <code>DELETE = 1;</code>
     */
    DELETE(1, 1),
    /**
     * <code>EXPIRE = 2;</code>
     */
    EXPIRE(2, 2),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <code>PUT = 0;</code>
     */
    public static final int PUT_VALUE = 0;
    /**
     * <code>DELETE = 1;</code>
     */
    public static final int DELETE_VALUE = 1;
    /**
     * <code>EXPIRE = 2;</code>
     */
    public static final int EXPIRE_VALUE = 2;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public static EventType valueOf(int value) {
      switch (value) {
        case 0: return PUT;
        case 1: return DELETE;
        case 2: return EXPIRE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
            public EventType findValueByNumber(int number) {
              return EventType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.xqbase.etcd4j.Event.getDescriptor().getEnumTypes().get(0);
    }

    private static final EventType[] VALUES = values();

    public static EventType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EventType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:etcd4j.Event.EventType)
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>optional .etcd4j.Event.EventType type = 1;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>optional .etcd4j.Event.EventType type = 1;</code>
   */
  public com.xqbase.etcd4j.Event.EventType getType() {
    com.xqbase.etcd4j.Event.EventType result = com.xqbase.etcd4j.Event.EventType.valueOf(type_);
    return result == null ? com.xqbase.etcd4j.Event.EventType.UNRECOGNIZED : result;
  }

  public static final int KV_FIELD_NUMBER = 2;
  private com.xqbase.etcd4j.KeyValue kv_;
  /**
   * <code>optional .etcd4j.KeyValue kv = 2;</code>
   *
   * <pre>
   * A PUT event contains current kv pair.
   * A PUT event with kv.Version=1 indicates the creation of a key.
   * A DELETE/EXPIRE event contains the deleted key with
   * its modification revision set to the revision of deletion.
   * </pre>
   */
  public boolean hasKv() {
    return kv_ != null;
  }
  /**
   * <code>optional .etcd4j.KeyValue kv = 2;</code>
   *
   * <pre>
   * A PUT event contains current kv pair.
   * A PUT event with kv.Version=1 indicates the creation of a key.
   * A DELETE/EXPIRE event contains the deleted key with
   * its modification revision set to the revision of deletion.
   * </pre>
   */
  public com.xqbase.etcd4j.KeyValue getKv() {
    return kv_ == null ? com.xqbase.etcd4j.KeyValue.getDefaultInstance() : kv_;
  }
  /**
   * <code>optional .etcd4j.KeyValue kv = 2;</code>
   *
   * <pre>
   * A PUT event contains current kv pair.
   * A PUT event with kv.Version=1 indicates the creation of a key.
   * A DELETE/EXPIRE event contains the deleted key with
   * its modification revision set to the revision of deletion.
   * </pre>
   */
  public com.xqbase.etcd4j.KeyValueOrBuilder getKvOrBuilder() {
    return getKv();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.xqbase.etcd4j.Event.EventType.PUT.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (kv_ != null) {
      output.writeMessage(2, getKv());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.xqbase.etcd4j.Event.EventType.PUT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (kv_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getKv());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.xqbase.etcd4j.Event parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xqbase.etcd4j.Event parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xqbase.etcd4j.Event parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xqbase.etcd4j.Event parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xqbase.etcd4j.Event parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.xqbase.etcd4j.Event parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.xqbase.etcd4j.Event parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.xqbase.etcd4j.Event parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.xqbase.etcd4j.Event parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.xqbase.etcd4j.Event parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xqbase.etcd4j.Event prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code etcd4j.Event}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:etcd4j.Event)
      com.xqbase.etcd4j.EventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xqbase.etcd4j.Event.class, com.xqbase.etcd4j.Event.Builder.class);
    }

    // Construct using com.xqbase.etcd4j.Event.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      type_ = 0;

      if (kvBuilder_ == null) {
        kv_ = null;
      } else {
        kv_ = null;
        kvBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xqbase.etcd4j.EtcdJavaProto.internal_static_etcd4j_Event_descriptor;
    }

    public com.xqbase.etcd4j.Event getDefaultInstanceForType() {
      return com.xqbase.etcd4j.Event.getDefaultInstance();
    }

    public com.xqbase.etcd4j.Event build() {
      com.xqbase.etcd4j.Event result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.xqbase.etcd4j.Event buildPartial() {
      com.xqbase.etcd4j.Event result = new com.xqbase.etcd4j.Event(this);
      result.type_ = type_;
      if (kvBuilder_ == null) {
        result.kv_ = kv_;
      } else {
        result.kv_ = kvBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xqbase.etcd4j.Event) {
        return mergeFrom((com.xqbase.etcd4j.Event)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xqbase.etcd4j.Event other) {
      if (other == com.xqbase.etcd4j.Event.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasKv()) {
        mergeKv(other.getKv());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xqbase.etcd4j.Event parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xqbase.etcd4j.Event) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int type_ = 0;
    /**
     * <code>optional .etcd4j.Event.EventType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .etcd4j.Event.EventType type = 1;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .etcd4j.Event.EventType type = 1;</code>
     */
    public com.xqbase.etcd4j.Event.EventType getType() {
      com.xqbase.etcd4j.Event.EventType result = com.xqbase.etcd4j.Event.EventType.valueOf(type_);
      return result == null ? com.xqbase.etcd4j.Event.EventType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .etcd4j.Event.EventType type = 1;</code>
     */
    public Builder setType(com.xqbase.etcd4j.Event.EventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .etcd4j.Event.EventType type = 1;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.xqbase.etcd4j.KeyValue kv_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.xqbase.etcd4j.KeyValue, com.xqbase.etcd4j.KeyValue.Builder, com.xqbase.etcd4j.KeyValueOrBuilder> kvBuilder_;
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public boolean hasKv() {
      return kvBuilder_ != null || kv_ != null;
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public com.xqbase.etcd4j.KeyValue getKv() {
      if (kvBuilder_ == null) {
        return kv_ == null ? com.xqbase.etcd4j.KeyValue.getDefaultInstance() : kv_;
      } else {
        return kvBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public Builder setKv(com.xqbase.etcd4j.KeyValue value) {
      if (kvBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kv_ = value;
        onChanged();
      } else {
        kvBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public Builder setKv(
        com.xqbase.etcd4j.KeyValue.Builder builderForValue) {
      if (kvBuilder_ == null) {
        kv_ = builderForValue.build();
        onChanged();
      } else {
        kvBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public Builder mergeKv(com.xqbase.etcd4j.KeyValue value) {
      if (kvBuilder_ == null) {
        if (kv_ != null) {
          kv_ =
            com.xqbase.etcd4j.KeyValue.newBuilder(kv_).mergeFrom(value).buildPartial();
        } else {
          kv_ = value;
        }
        onChanged();
      } else {
        kvBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public Builder clearKv() {
      if (kvBuilder_ == null) {
        kv_ = null;
        onChanged();
      } else {
        kv_ = null;
        kvBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public com.xqbase.etcd4j.KeyValue.Builder getKvBuilder() {
      
      onChanged();
      return getKvFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    public com.xqbase.etcd4j.KeyValueOrBuilder getKvOrBuilder() {
      if (kvBuilder_ != null) {
        return kvBuilder_.getMessageOrBuilder();
      } else {
        return kv_ == null ?
            com.xqbase.etcd4j.KeyValue.getDefaultInstance() : kv_;
      }
    }
    /**
     * <code>optional .etcd4j.KeyValue kv = 2;</code>
     *
     * <pre>
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.xqbase.etcd4j.KeyValue, com.xqbase.etcd4j.KeyValue.Builder, com.xqbase.etcd4j.KeyValueOrBuilder> 
        getKvFieldBuilder() {
      if (kvBuilder_ == null) {
        kvBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.xqbase.etcd4j.KeyValue, com.xqbase.etcd4j.KeyValue.Builder, com.xqbase.etcd4j.KeyValueOrBuilder>(
                getKv(),
                getParentForChildren(),
                isClean());
        kv_ = null;
      }
      return kvBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:etcd4j.Event)
  }

  // @@protoc_insertion_point(class_scope:etcd4j.Event)
  private static final com.xqbase.etcd4j.Event DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xqbase.etcd4j.Event();
  }

  public static com.xqbase.etcd4j.Event getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Event>
      PARSER = new com.google.protobuf.AbstractParser<Event>() {
    public Event parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Event(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Event> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Event> getParserForType() {
    return PARSER;
  }

  public com.xqbase.etcd4j.Event getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

